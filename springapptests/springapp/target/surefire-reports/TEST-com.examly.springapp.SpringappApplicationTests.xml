<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.examly.springapp.SpringappApplicationTests" time="4.867" tests="19" errors="6" skipped="0" failures="6">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/coder/project/workspace/springapptests/springapp/target/test-classes:/home/coder/project/workspace/springapptests/springapp/target/classes:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.3.8/spring-boot-starter-data-jpa-3.3.8.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.3.8/spring-boot-starter-aop-3.3.8.jar:/home/coder/.m2/repository/org/springframework/spring-aop/6.1.16/spring-aop-6.1.16.jar:/home/coder/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.3.8/spring-boot-starter-jdbc-3.3.8.jar:/home/coder/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/home/coder/.m2/repository/org/springframework/spring-jdbc/6.1.16/spring-jdbc-6.1.16.jar:/home/coder/.m2/repository/org/hibernate/orm/hibernate-core/6.5.3.Final/hibernate-core-6.5.3.Final.jar:/home/coder/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/coder/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/coder/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/coder/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/coder/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/coder/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/home/coder/.m2/repository/net/bytebuddy/byte-buddy/1.14.19/byte-buddy-1.14.19.jar:/home/coder/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/home/coder/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/home/coder/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/home/coder/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/home/coder/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/coder/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/coder/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/coder/.m2/repository/org/springframework/data/spring-data-jpa/3.3.8/spring-data-jpa-3.3.8.jar:/home/coder/.m2/repository/org/springframework/data/spring-data-commons/3.3.8/spring-data-commons-3.3.8.jar:/home/coder/.m2/repository/org/springframework/spring-orm/6.1.16/spring-orm-6.1.16.jar:/home/coder/.m2/repository/org/springframework/spring-context/6.1.16/spring-context-6.1.16.jar:/home/coder/.m2/repository/org/springframework/spring-tx/6.1.16/spring-tx-6.1.16.jar:/home/coder/.m2/repository/org/springframework/spring-beans/6.1.16/spring-beans-6.1.16.jar:/home/coder/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/coder/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/home/coder/.m2/repository/org/springframework/spring-aspects/6.1.16/spring-aspects-6.1.16.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.3.8/spring-boot-starter-web-3.3.8.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter/3.3.8/spring-boot-starter-3.3.8.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.3.8/spring-boot-starter-logging-3.3.8.jar:/home/coder/.m2/repository/ch/qos/logback/logback-classic/1.5.16/logback-classic-1.5.16.jar:/home/coder/.m2/repository/ch/qos/logback/logback-core/1.5.16/logback-core-1.5.16.jar:/home/coder/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.23.1/log4j-to-slf4j-2.23.1.jar:/home/coder/.m2/repository/org/apache/logging/log4j/log4j-api/2.23.1/log4j-api-2.23.1.jar:/home/coder/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/home/coder/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.3.8/spring-boot-starter-json-3.3.8.jar:/home/coder/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.17.3/jackson-databind-2.17.3.jar:/home/coder/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.17.3/jackson-annotations-2.17.3.jar:/home/coder/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.17.3/jackson-core-2.17.3.jar:/home/coder/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.17.3/jackson-datatype-jdk8-2.17.3.jar:/home/coder/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.17.3/jackson-datatype-jsr310-2.17.3.jar:/home/coder/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.17.3/jackson-module-parameter-names-2.17.3.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.3.8/spring-boot-starter-tomcat-3.3.8.jar:/home/coder/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.34/tomcat-embed-core-10.1.34.jar:/home/coder/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.34/tomcat-embed-el-10.1.34.jar:/home/coder/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.34/tomcat-embed-websocket-10.1.34.jar:/home/coder/.m2/repository/org/springframework/spring-web/6.1.16/spring-web-6.1.16.jar:/home/coder/.m2/repository/io/micrometer/micrometer-observation/1.13.10/micrometer-observation-1.13.10.jar:/home/coder/.m2/repository/io/micrometer/micrometer-commons/1.13.10/micrometer-commons-1.13.10.jar:/home/coder/.m2/repository/org/springframework/spring-webmvc/6.1.16/spring-webmvc-6.1.16.jar:/home/coder/.m2/repository/org/springframework/spring-expression/6.1.16/spring-expression-6.1.16.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-devtools/3.3.8/spring-boot-devtools-3.3.8.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot/3.3.8/spring-boot-3.3.8.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.3.8/spring-boot-autoconfigure-3.3.8.jar:/home/coder/.m2/repository/com/mysql/mysql-connector-j/8.3.0/mysql-connector-j-8.3.0.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.3.8/spring-boot-starter-test-3.3.8.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-test/3.3.8/spring-boot-test-3.3.8.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.3.8/spring-boot-test-autoconfigure-3.3.8.jar:/home/coder/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/home/coder/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/home/coder/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/home/coder/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/home/coder/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/home/coder/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/home/coder/.m2/repository/org/assertj/assertj-core/3.25.3/assertj-core-3.25.3.jar:/home/coder/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/home/coder/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/coder/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.5/junit-jupiter-5.10.5.jar:/home/coder/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.5/junit-jupiter-api-5.10.5.jar:/home/coder/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/coder/.m2/repository/org/junit/platform/junit-platform-commons/1.10.5/junit-platform-commons-1.10.5.jar:/home/coder/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/coder/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.5/junit-jupiter-params-5.10.5.jar:/home/coder/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.5/junit-jupiter-engine-5.10.5.jar:/home/coder/.m2/repository/org/junit/platform/junit-platform-engine/1.10.5/junit-platform-engine-1.10.5.jar:/home/coder/.m2/repository/org/mockito/mockito-core/5.11.0/mockito-core-5.11.0.jar:/home/coder/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.19/byte-buddy-agent-1.14.19.jar:/home/coder/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/coder/.m2/repository/org/mockito/mockito-junit-jupiter/5.11.0/mockito-junit-jupiter-5.11.0.jar:/home/coder/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/home/coder/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/coder/.m2/repository/org/springframework/spring-core/6.1.16/spring-core-6.1.16.jar:/home/coder/.m2/repository/org/springframework/spring-jcl/6.1.16/spring-jcl-6.1.16.jar:/home/coder/.m2/repository/org/springframework/spring-test/6.1.16/spring-test-6.1.16.jar:/home/coder/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:"/>
    <property name="java.vm.vendor" value="Debian"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://tracker.debian.org/openjdk-17"/>
    <property name="user.timezone" value="Etc/UTC"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-17-openjdk-amd64/lib"/>
    <property name="sun.java.command" value="/home/coder/project/workspace/springapptests/springapp/target/surefire/surefirebooter3990807250377782960.jar /home/coder/project/workspace/springapptests/springapp/target/surefire 2025-04-28T10-38-41_544-jvmRun1 surefire17515976153418903403tmp surefire_017907743314832903625tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/coder/project/workspace/springapptests/springapp/target/test-classes:/home/coder/project/workspace/springapptests/springapp/target/classes:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.3.8/spring-boot-starter-data-jpa-3.3.8.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.3.8/spring-boot-starter-aop-3.3.8.jar:/home/coder/.m2/repository/org/springframework/spring-aop/6.1.16/spring-aop-6.1.16.jar:/home/coder/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.3.8/spring-boot-starter-jdbc-3.3.8.jar:/home/coder/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/home/coder/.m2/repository/org/springframework/spring-jdbc/6.1.16/spring-jdbc-6.1.16.jar:/home/coder/.m2/repository/org/hibernate/orm/hibernate-core/6.5.3.Final/hibernate-core-6.5.3.Final.jar:/home/coder/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/coder/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/coder/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/coder/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/coder/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/coder/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/home/coder/.m2/repository/net/bytebuddy/byte-buddy/1.14.19/byte-buddy-1.14.19.jar:/home/coder/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/home/coder/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/home/coder/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/home/coder/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/home/coder/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/coder/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/coder/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/coder/.m2/repository/org/springframework/data/spring-data-jpa/3.3.8/spring-data-jpa-3.3.8.jar:/home/coder/.m2/repository/org/springframework/data/spring-data-commons/3.3.8/spring-data-commons-3.3.8.jar:/home/coder/.m2/repository/org/springframework/spring-orm/6.1.16/spring-orm-6.1.16.jar:/home/coder/.m2/repository/org/springframework/spring-context/6.1.16/spring-context-6.1.16.jar:/home/coder/.m2/repository/org/springframework/spring-tx/6.1.16/spring-tx-6.1.16.jar:/home/coder/.m2/repository/org/springframework/spring-beans/6.1.16/spring-beans-6.1.16.jar:/home/coder/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/coder/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/home/coder/.m2/repository/org/springframework/spring-aspects/6.1.16/spring-aspects-6.1.16.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.3.8/spring-boot-starter-web-3.3.8.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter/3.3.8/spring-boot-starter-3.3.8.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.3.8/spring-boot-starter-logging-3.3.8.jar:/home/coder/.m2/repository/ch/qos/logback/logback-classic/1.5.16/logback-classic-1.5.16.jar:/home/coder/.m2/repository/ch/qos/logback/logback-core/1.5.16/logback-core-1.5.16.jar:/home/coder/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.23.1/log4j-to-slf4j-2.23.1.jar:/home/coder/.m2/repository/org/apache/logging/log4j/log4j-api/2.23.1/log4j-api-2.23.1.jar:/home/coder/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/home/coder/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.3.8/spring-boot-starter-json-3.3.8.jar:/home/coder/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.17.3/jackson-databind-2.17.3.jar:/home/coder/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.17.3/jackson-annotations-2.17.3.jar:/home/coder/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.17.3/jackson-core-2.17.3.jar:/home/coder/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.17.3/jackson-datatype-jdk8-2.17.3.jar:/home/coder/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.17.3/jackson-datatype-jsr310-2.17.3.jar:/home/coder/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.17.3/jackson-module-parameter-names-2.17.3.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.3.8/spring-boot-starter-tomcat-3.3.8.jar:/home/coder/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.34/tomcat-embed-core-10.1.34.jar:/home/coder/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.34/tomcat-embed-el-10.1.34.jar:/home/coder/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.34/tomcat-embed-websocket-10.1.34.jar:/home/coder/.m2/repository/org/springframework/spring-web/6.1.16/spring-web-6.1.16.jar:/home/coder/.m2/repository/io/micrometer/micrometer-observation/1.13.10/micrometer-observation-1.13.10.jar:/home/coder/.m2/repository/io/micrometer/micrometer-commons/1.13.10/micrometer-commons-1.13.10.jar:/home/coder/.m2/repository/org/springframework/spring-webmvc/6.1.16/spring-webmvc-6.1.16.jar:/home/coder/.m2/repository/org/springframework/spring-expression/6.1.16/spring-expression-6.1.16.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-devtools/3.3.8/spring-boot-devtools-3.3.8.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot/3.3.8/spring-boot-3.3.8.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.3.8/spring-boot-autoconfigure-3.3.8.jar:/home/coder/.m2/repository/com/mysql/mysql-connector-j/8.3.0/mysql-connector-j-8.3.0.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.3.8/spring-boot-starter-test-3.3.8.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-test/3.3.8/spring-boot-test-3.3.8.jar:/home/coder/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.3.8/spring-boot-test-autoconfigure-3.3.8.jar:/home/coder/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/home/coder/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/home/coder/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/home/coder/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/home/coder/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/home/coder/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/home/coder/.m2/repository/org/assertj/assertj-core/3.25.3/assertj-core-3.25.3.jar:/home/coder/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/home/coder/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/coder/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.5/junit-jupiter-5.10.5.jar:/home/coder/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.5/junit-jupiter-api-5.10.5.jar:/home/coder/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/coder/.m2/repository/org/junit/platform/junit-platform-commons/1.10.5/junit-platform-commons-1.10.5.jar:/home/coder/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/coder/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.5/junit-jupiter-params-5.10.5.jar:/home/coder/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.5/junit-jupiter-engine-5.10.5.jar:/home/coder/.m2/repository/org/junit/platform/junit-platform-engine/1.10.5/junit-platform-engine-1.10.5.jar:/home/coder/.m2/repository/org/mockito/mockito-core/5.11.0/mockito-core-5.11.0.jar:/home/coder/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.19/byte-buddy-agent-1.14.19.jar:/home/coder/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/coder/.m2/repository/org/mockito/mockito-junit-jupiter/5.11.0/mockito-junit-jupiter-5.11.0.jar:/home/coder/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/home/coder/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/coder/.m2/repository/org/springframework/spring-core/6.1.16/spring-core-6.1.16.jar:/home/coder/.m2/repository/org/springframework/spring-jcl/6.1.16/spring-jcl-6.1.16.jar:/home/coder/.m2/repository/org/springframework/spring-test/6.1.16/spring-test-6.1.16.jar:/home/coder/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/coder"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-01-21"/>
    <property name="java.home" value="/usr/lib/jvm/java-17-openjdk-amd64"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/coder/project/workspace/springapptests/springapp"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/home/coder/project/workspace/springapptests/springapp/target/surefire/surefirebooter3990807250377782960.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.14+7-Debian-1deb11u1"/>
    <property name="user.name" value="coder"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.1.123+"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/coder/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugs.debian.org/openjdk-17"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.14"/>
    <property name="user.dir" value="/home/coder/project/workspace/springapptests/springapp"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="38569"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Debian"/>
    <property name="java.vm.version" value="17.0.14+7-Debian-1deb11u1"/>
    <property name="java.specification.maintenance.version" value="1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="testGetAllCustomers_NotFound" classname="com.examly.springapp.SpringappApplicationTests" time="0.516">
    <system-out><![CDATA[10:38:42.530 [main] INFO org.springframework.boot.devtools.restart.RestartApplicationListener -- Restart disabled due to context in which it is running

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.3.8)

2025-04-28T10:38:42.761Z  INFO 38569 --- [           main] c.e.springapp.SpringappApplicationTests  : Starting SpringappApplicationTests using Java 17.0.14 with PID 38569 (started by coder in /home/coder/project/workspace/springapptests/springapp)
2025-04-28T10:38:42.763Z  INFO 38569 --- [           main] c.e.springapp.SpringappApplicationTests  : No active profile set, falling back to 1 default profile: "default"
2025-04-28T10:38:43.653Z  INFO 38569 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-28T10:38:43.711Z  INFO 38569 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 50 ms. Found 2 JPA repository interfaces.
2025-04-28T10:38:44.102Z  INFO 38569 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-28T10:38:44.137Z  INFO 38569 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2025-04-28T10:38:44.161Z  INFO 38569 --- [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-04-28T10:38:44.368Z  INFO 38569 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-28T10:38:44.389Z  INFO 38569 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-04-28T10:38:44.525Z  INFO 38569 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6cceb281
2025-04-28T10:38:44.526Z  INFO 38569 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-04-28T10:38:44.542Z  WARN 38569 --- [           main] org.hibernate.orm.deprecation            : HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-28T10:38:44.543Z  WARN 38569 --- [           main] org.hibernate.orm.deprecation            : HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-04-28T10:38:45.126Z  INFO 38569 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: alter table account drop foreign key FKnnwpo0lfq4xai1rs6887sx02k
Hibernate: drop table if exists account
Hibernate: drop table if exists customer
Hibernate: create table account (balance float(53), is_active bit, customer_id bigint, id bigint not null auto_increment, account_number varchar(255), primary key (id)) engine=InnoDB
Hibernate: create table customer (is_verified bit, id bigint not null auto_increment, address varchar(255), email varchar(255), name varchar(255), phone_number varchar(255), primary key (id)) engine=InnoDB
Hibernate: alter table account add constraint UKq6ux6is14rkik374noo9xwo5 unique (customer_id)
Hibernate: alter table account add constraint FKnnwpo0lfq4xai1rs6887sx02k foreign key (customer_id) references customer (id)
2025-04-28T10:38:45.267Z  INFO 38569 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-28T10:38:45.465Z  INFO 38569 --- [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-28T10:38:45.903Z  WARN 38569 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-28T10:38:46.185Z  INFO 38569 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-04-28T10:38:46.185Z  INFO 38569 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-04-28T10:38:46.188Z  INFO 38569 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-04-28T10:38:46.218Z  INFO 38569 --- [           main] c.e.springapp.SpringappApplicationTests  : Started SpringappApplicationTests in 3.698 seconds (process running for 4.423)
Hibernate: select c1_0.id,c1_0.address,c1_0.email,c1_0.is_verified,c1_0.name,c1_0.phone_number from customer c1_0
]]></system-out>
  </testcase>
  <testcase name="testCreateCustomer_Success" classname="com.examly.springapp.SpringappApplicationTests" time="0.103">
    <failure type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<201> but was:<500>
	at com.examly.springapp.SpringappApplicationTests.testCreateCustomer_Success(SpringappApplicationTests.java:52)
]]></failure>
    <system-out><![CDATA[Hibernate: insert into customer (address,email,is_verified,name,phone_number) values (?,?,?,?,?)
2025-04-28T10:38:46.851Z  WARN 38569 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Unimplemented method 'getAccount']

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/customer
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", Content-Length:"134"]
             Body = {"name": "John Doe","email": "john.doe@example.com","phoneNumber": "1234567890","address": "123 Main St, New York","isVerified": true}
    Session Attrs = {}

Handler:
             Type = com.examly.springapp.controller.CustomerController
           Method = com.examly.springapp.controller.CustomerController#createCustomer(Customer)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.http.converter.HttpMessageNotWritableException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 500
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="testCreateCustomer_MissingFields" classname="com.examly.springapp.SpringappApplicationTests" time="0.007"/>
  <testcase name="testGetAllCustomers_Success" classname="com.examly.springapp.SpringappApplicationTests" time="0.021">
    <failure type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<200> but was:<500>
	at com.examly.springapp.SpringappApplicationTests.testGetAllCustomers_Success(SpringappApplicationTests.java:76)
]]></failure>
    <system-out><![CDATA[Hibernate: select c1_0.id,c1_0.address,c1_0.email,c1_0.is_verified,c1_0.name,c1_0.phone_number from customer c1_0
2025-04-28T10:38:46.883Z  WARN 38569 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Unimplemented method 'getAccount']

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/customer
       Parameters = {}
          Headers = [Accept:"application/json"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.examly.springapp.controller.CustomerController
           Method = com.examly.springapp.controller.CustomerController#getAllCustomers()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.http.converter.HttpMessageNotWritableException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 500
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="testUpdateCustomer_Success" classname="com.examly.springapp.SpringappApplicationTests" time="0.04">
    <failure type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<200> but was:<500>
	at com.examly.springapp.SpringappApplicationTests.testUpdateCustomer_Success(SpringappApplicationTests.java:90)
]]></failure>
    <system-out><![CDATA[Hibernate: select c1_0.id,c1_0.address,c1_0.email,c1_0.is_verified,c1_0.name,c1_0.phone_number from customer c1_0 where c1_0.id=?
Hibernate: update customer set address=?,email=?,is_verified=?,name=?,phone_number=? where id=?
2025-04-28T10:38:46.925Z  WARN 38569 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Unimplemented method 'getAccount']

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /api/customer/1
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", Content-Length:"55"]
             Body = { "name": "Updated Name", "phoneNumber": "9876543210" }
    Session Attrs = {}

Handler:
             Type = com.examly.springapp.controller.CustomerController
           Method = com.examly.springapp.controller.CustomerController#updateCustomer(Long, Customer)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.http.converter.HttpMessageNotWritableException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 500
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="testUpdateCustomer_NotFound" classname="com.examly.springapp.SpringappApplicationTests" time="0.013">
    <system-out><![CDATA[Hibernate: select c1_0.id,c1_0.address,c1_0.email,c1_0.is_verified,c1_0.name,c1_0.phone_number from customer c1_0 where c1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="testCreateAccount_Success" classname="com.examly.springapp.SpringappApplicationTests" time="0.008">
    <failure type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<201> but was:<405>
	at com.examly.springapp.SpringappApplicationTests.testCreateAccount_Success(SpringappApplicationTests.java:121)
]]></failure>
    <system-out><![CDATA[2025-04-28T10:38:46.952Z  WARN 38569 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/account/1
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", Content-Length:"65"]
             Body = {"accountNumber": "AC-12345","balance": 1000.00,"isActive": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Method 'POST' is not supported.
          Headers = [Allow:"GET, DELETE"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="testCustomerHasLinkedAccount" classname="com.examly.springapp.SpringappApplicationTests" time="0.024">
    <failure type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<200> but was:<500>
	at com.examly.springapp.SpringappApplicationTests.testCustomerHasLinkedAccount(SpringappApplicationTests.java:131)
]]></failure>
    <system-out><![CDATA[Hibernate: select c1_0.id,c1_0.address,c1_0.email,c1_0.is_verified,c1_0.name,c1_0.phone_number from customer c1_0
2025-04-28T10:38:46.968Z  WARN 38569 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Unimplemented method 'getAccount']

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/customer
       Parameters = {}
          Headers = [Accept:"application/json"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.examly.springapp.controller.CustomerController
           Method = com.examly.springapp.controller.CustomerController#getAllCustomers()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.http.converter.HttpMessageNotWritableException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 500
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="testCreateAccount_CustomerNotFound" classname="com.examly.springapp.SpringappApplicationTests" time="0.009">
    <failure type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<404> but was:<405>
	at com.examly.springapp.SpringappApplicationTests.testCreateAccount_CustomerNotFound(SpringappApplicationTests.java:144)
]]></failure>
    <system-out><![CDATA[2025-04-28T10:38:46.988Z  WARN 38569 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/account/99
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", Content-Length:"50"]
             Body = { "accountNumber": "AC-99999", "balance": 500.00 }
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Method 'POST' is not supported.
          Headers = [Allow:"GET, DELETE"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="testGetAccountById_Success" classname="com.examly.springapp.SpringappApplicationTests" time="0.019">
    <error type="jakarta.servlet.ServletException"><![CDATA[jakarta.servlet.ServletException: Request processing failed: com.examly.springapp.exception.ResourceNotFoundException: Account with ID 1 not found.
	at com.examly.springapp.SpringappApplicationTests.testGetAccountById_Success(SpringappApplicationTests.java:151)
Caused by: com.examly.springapp.exception.ResourceNotFoundException: Account with ID 1 not found.
	at com.examly.springapp.SpringappApplicationTests.testGetAccountById_Success(SpringappApplicationTests.java:151)
]]></error>
    <system-out><![CDATA[Hibernate: select a1_0.id,a1_0.account_number,a1_0.balance,c1_0.id,c1_0.address,c1_0.email,c1_0.is_verified,c1_0.name,c1_0.phone_number,a1_0.is_active from account a1_0 left join customer c1_0 on c1_0.id=a1_0.customer_id where a1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="testGetAccountsByCustomer_Success" classname="com.examly.springapp.SpringappApplicationTests" time="0.008">
    <error type="jakarta.servlet.ServletException"><![CDATA[jakarta.servlet.ServletException: Request processing failed: java.lang.UnsupportedOperationException: Unimplemented method 'getAccountByCustomerName'
	at com.examly.springapp.SpringappApplicationTests.testGetAccountsByCustomer_Success(SpringappApplicationTests.java:161)
Caused by: java.lang.UnsupportedOperationException: Unimplemented method 'getAccountByCustomerName'
	at com.examly.springapp.SpringappApplicationTests.testGetAccountsByCustomer_Success(SpringappApplicationTests.java:161)
]]></error>
  </testcase>
  <testcase name="testGetAccountById_NotFound" classname="com.examly.springapp.SpringappApplicationTests" time="0.007">
    <error type="jakarta.servlet.ServletException"><![CDATA[jakarta.servlet.ServletException: Request processing failed: com.examly.springapp.exception.ResourceNotFoundException: Account with ID 100 not found.
	at com.examly.springapp.SpringappApplicationTests.testGetAccountById_NotFound(SpringappApplicationTests.java:170)
Caused by: com.examly.springapp.exception.ResourceNotFoundException: Account with ID 100 not found.
	at com.examly.springapp.SpringappApplicationTests.testGetAccountById_NotFound(SpringappApplicationTests.java:170)
]]></error>
    <system-out><![CDATA[Hibernate: select a1_0.id,a1_0.account_number,a1_0.balance,c1_0.id,c1_0.address,c1_0.email,c1_0.is_verified,c1_0.name,c1_0.phone_number,a1_0.is_active from account a1_0 left join customer c1_0 on c1_0.id=a1_0.customer_id where a1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="testDeleteAccount_Success" classname="com.examly.springapp.SpringappApplicationTests" time="0.008">
    <error type="jakarta.servlet.ServletException"><![CDATA[jakarta.servlet.ServletException: Request processing failed: com.examly.springapp.exception.ResourceNotFoundException: Account with ID 1 not found.
	at com.examly.springapp.SpringappApplicationTests.testDeleteAccount_Success(SpringappApplicationTests.java:179)
Caused by: com.examly.springapp.exception.ResourceNotFoundException: Account with ID 1 not found.
	at com.examly.springapp.SpringappApplicationTests.testDeleteAccount_Success(SpringappApplicationTests.java:179)
]]></error>
    <system-out><![CDATA[Hibernate: select a1_0.id,a1_0.account_number,a1_0.balance,c1_0.id,c1_0.address,c1_0.email,c1_0.is_verified,c1_0.name,c1_0.phone_number,a1_0.is_active from account a1_0 left join customer c1_0 on c1_0.id=a1_0.customer_id where a1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="testDeleteAccount_NotFound" classname="com.examly.springapp.SpringappApplicationTests" time="0.007">
    <error type="jakarta.servlet.ServletException"><![CDATA[jakarta.servlet.ServletException: Request processing failed: com.examly.springapp.exception.ResourceNotFoundException: Account with ID 200 not found.
	at com.examly.springapp.SpringappApplicationTests.testDeleteAccount_NotFound(SpringappApplicationTests.java:188)
Caused by: com.examly.springapp.exception.ResourceNotFoundException: Account with ID 200 not found.
	at com.examly.springapp.SpringappApplicationTests.testDeleteAccount_NotFound(SpringappApplicationTests.java:188)
]]></error>
    <system-out><![CDATA[Hibernate: select a1_0.id,a1_0.account_number,a1_0.balance,c1_0.id,c1_0.address,c1_0.email,c1_0.is_verified,c1_0.name,c1_0.phone_number,a1_0.is_active from account a1_0 left join customer c1_0 on c1_0.id=a1_0.customer_id where a1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="testAccountAccessDeniedException" classname="com.examly.springapp.SpringappApplicationTests" time="0.005"/>
  <testcase name="testFindAllCustomersWithActiveAccounts" classname="com.examly.springapp.SpringappApplicationTests" time="0.004">
    <error type="jakarta.servlet.ServletException"><![CDATA[jakarta.servlet.ServletException: Request processing failed: java.lang.UnsupportedOperationException: Unimplemented method 'getAllCustomersWithActiveAccounts'
	at com.examly.springapp.SpringappApplicationTests.testFindAllCustomersWithActiveAccounts(SpringappApplicationTests.java:207)
Caused by: java.lang.UnsupportedOperationException: Unimplemented method 'getAllCustomersWithActiveAccounts'
	at com.examly.springapp.SpringappApplicationTests.testFindAllCustomersWithActiveAccounts(SpringappApplicationTests.java:207)
]]></error>
  </testcase>
  <testcase name="testQueryAnnotationPresentInAccountRepository" classname="com.examly.springapp.SpringappApplicationTests" time="0.005"/>
  <testcase name="testFoldersExist" classname="com.examly.springapp.SpringappApplicationTests" time="0.002"/>
  <testcase name="testFilesExist" classname="com.examly.springapp.SpringappApplicationTests" time="0.003"/>
</testsuite>